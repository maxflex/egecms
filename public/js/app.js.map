{"version":3,"sources":["app.coffee","controllers/login.coffee","controllers/pages.coffee","controllers/tags.coffee","controllers/variables.coffee","controllers/_template.coffee","resources/resources.coffee","directives/bs-select.coffee","directives/comments.coffee","directives/email.coffee","directives/input-comment.coffee","directives/metro-list.coffee","directives/multi-select.coffee","directives/pencil-input.coffee","directives/phones.coffee","directives/plural.coffee","directives/plus.coffee","directives/select-new.coffee","directives/select.coffee","directives/sms.coffee","directives/tutor-photo.coffee","directives/user-switch.coffee","directives/user.coffee","factory/factory.coffee","service/ace.coffee","service/crud.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module(\"Egecms\", ['ngSanitize', 'ngResource', 'ngAnimate', 'ui.sortable', 'ui.bootstrap', 'angular-ladda', 'angularFileUpload', 'ngTagsInput'])\r\n    .config [\r\n        '$compileProvider'\r\n        ($compileProvider) ->\r\n            $compileProvider.aHrefSanitizationWhitelist /^\\s*(https?|ftp|mailto|chrome-extension|sip):/\r\n\t]\r\n    .filter 'cut', ->\r\n      (value, wordwise, max, nothing = '', tail) ->\r\n        if !value\r\n          return nothing\r\n        max = parseInt(max, 10)\r\n        if !max\r\n          return value\r\n        if value.length <= max\r\n          return value\r\n        value = value.substr(0, max)\r\n        if wordwise\r\n          lastspace = value.lastIndexOf(' ')\r\n          if lastspace != -1\r\n            #Also remove . and , so its gives a cleaner result.\r\n            if value.charAt(lastspace - 1) == '.' or value.charAt(lastspace - 1) == ','\r\n              lastspace = lastspace - 1\r\n            value = value.substr(0, lastspace)\r\n        value + (tail or '…')\r\n    .filter 'hideZero', ->\r\n        (item) ->\r\n            if item > 0 then item else null\r\n#    .directive 'convertToNumber', ->\r\n#        {\r\n#            require: 'ngModel'\r\n#            link: (scope, element, attrs, ngModel) ->\r\n#                ngModel.$parsers.push (val) ->\r\n#                    +val\r\n#                ngModel.$formatters.push (val) ->\r\n#                    '' + val\r\n#        }\r\n    .run ($rootScope, $q) ->\r\n        # отвечает за загрузку данных\r\n        $rootScope.dataLoaded = $q.defer()\r\n        # конец анимации front-end загрузки и rebind маск\r\n        $rootScope.frontendStop = (rebind_masks = true) ->\r\n            $rootScope.frontend_loading = false\r\n            $rootScope.dataLoaded.resolve(true)\r\n            rebindMasks() if rebind_masks\r\n\r\n        $rootScope.range = (min, max, step) ->\r\n          step = step or 1\r\n          input = []\r\n          i = min\r\n          while i <= max\r\n            input.push i\r\n            i += step\r\n          input\r\n\r\n          # skip_values – какие значения в enum пропускать\r\n          # allowed_user_ids – пользователи, которым разрешено выбирать значения\r\n          # recursion – функция была запущена рекурсивно (внизу)\r\n        $rootScope.toggleEnum = (ngModel, status, ngEnum, skip_values = [], allowed_user_ids = [], recursion = false) ->\r\n            # если установлено значение, которое пропускается для обычных пользователей,\r\n            # то запрещать его смену\r\n            return if not recursion and parseInt(ngModel[status]) in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\r\n\r\n            statuses = Object.keys(ngEnum)\r\n            status_id = statuses.indexOf ngModel[status].toString()\r\n            status_id++\r\n            status_id = 0 if status_id > (statuses.length - 1)\r\n            ngModel[status] = statuses[status_id]\r\n            # if in skip_values\r\n            $rootScope.toggleEnum(ngModel, status, ngEnum, skip_values, allowed_user_ids, true) if status_id in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\r\n\r\n        # обновить + ждать ответа от сервера\r\n        $rootScope.toggleEnumServer = (ngModel, status, ngEnum, Resource) ->\r\n            statuses = Object.keys(ngEnum)\r\n            status_id = statuses.indexOf ngModel[status].toString()\r\n            status_id++\r\n            status_id = 0 if status_id > (statuses.length - 1)\r\n\r\n            update_data = {id: ngModel.id}\r\n            update_data[status] = status_id\r\n\r\n            Resource.update update_data, ->\r\n                ngModel[status] = statuses[status_id]\r\n\r\n        $rootScope.formatDateTime = (date) ->\r\n            moment(date).format \"DD.MM.YY в HH:mm\"\r\n\r\n        $rootScope.formatDate = (date, full_year = false) ->\r\n            return '' if not date\r\n            moment(date).format \"DD.MM.YY\" + (if full_year then \"YY\" else \"\")\r\n\r\n        $rootScope.dialog = (id) ->\r\n            $(\"##{id}\").modal 'show'\r\n            return\r\n\r\n        $rootScope.closeDialog = (id) ->\r\n            $(\"##{id}\").modal 'hide'\r\n            return\r\n\r\n        $rootScope.ajaxStart = ->\r\n            ajaxStart()\r\n            $rootScope.saving = true\r\n\r\n        $rootScope.ajaxEnd = ->\r\n            ajaxEnd()\r\n            $rootScope.saving = false\r\n\r\n        $rootScope.findById = (object, id) ->\r\n            _.findWhere(object, {id: parseInt(id)})\r\n\r\n        # prop2 – второй уровень вложенности\r\n        $rootScope.total = (array, prop, prop2 = false) ->\r\n            sum = 0\r\n            $.each array, (index, value) ->\r\n                v = value[prop]\r\n                v = v[prop2] if prop2\r\n                sum += v\r\n            sum\r\n\r\n        $rootScope.deny = (ngModel, prop) ->\r\n            ngModel[prop] = +(!ngModel[prop])\r\n\r\n        $rootScope.formatBytes = (bytes) ->\r\n          if bytes < 1024\r\n            bytes + ' Bytes'\r\n          else if bytes < 1048576\r\n            (bytes / 1024).toFixed(1) + ' KB'\r\n          else if bytes < 1073741824\r\n            (bytes / 1048576).toFixed(1) + ' MB'\r\n          else\r\n            (bytes / 1073741824).toFixed(1) + ' GB'\r\n","angular\r\n    .module 'Egecms'\r\n    .controller 'LoginCtrl', ($scope, $http) ->\r\n        angular.element(document).ready ->\r\n            $scope.l = Ladda.create(document.querySelector('#login-submit'))\r\n\r\n        $scope.checkFields = ->\r\n            $scope.l.start()\r\n            ajaxStart()\r\n            $scope.in_process = true\r\n            $http.post 'login',\r\n                login: $scope.login\r\n                password: $scope.password\r\n            .then (response) ->\r\n                if response.data is true\r\n                    location.reload()\r\n                else\r\n                    $scope.in_process = false\r\n                    ajaxEnd()\r\n                    $scope.l.stop()\r\n                    notifyError \"Неправильная пара логин-пароль\"\r\n","angular\r\n    .module 'Egecms'\r\n    .controller 'PagesIndex', ($scope, $attrs, $timeout, IndexService, Page, FileUploader) ->\r\n        bindArguments($scope, arguments)\r\n\r\n        $scope.sortableOptions =\r\n            update: (e, ui) ->\r\n                $timeout ->\r\n                    IndexService.page.data.forEach (model, index) ->\r\n                        Page.update({id: model.id}, {position: index})\r\n            axis: 'y'\r\n\r\n        FileUploader.FileSelect.prototype.isEmptyAfterSelection = ->\r\n            true\r\n\r\n        $scope.uploader = new FileUploader\r\n            url: 'pages/import'\r\n            alias: 'pages'\r\n            autoUpload: true\r\n            method: 'post'\r\n            removeAfterUpload: true\r\n            onCompleteItem: (i, response, status) ->\r\n                notifySuccess 'Импортирован' if status is 200\r\n                notifyError 'Ошибка!' if status isnt 200\r\n            onWhenAddingFileFailed  = (item, filter, options) ->\r\n                if filter.name is \"queueLimit\"\r\n                    this.clearQueue()\r\n                    this.addToQueue(item)\r\n\r\n\r\n        $scope.import = (e) ->\r\n            e.preventDefault()\r\n            $('#import-button').trigger 'click'\r\n            return #parse:isecdom err fix\r\n\r\n        angular.element(document).ready ->\r\n            IndexService.init(Page, $scope.current_page, $attrs)\r\n    .controller 'PagesForm', ($scope, $http, $attrs, $timeout, FormService, AceService, Page, Published, UpDown, Tag) ->\r\n        bindArguments($scope, arguments)\r\n        angular.element(document).ready ->\r\n            $scope.model.tags = [] if $scope.model and not $scope.model.tags\r\n            FormService.init(Page, $scope.id, $scope.model)\r\n            FormService.dataLoaded.promise.then ->\r\n                AceService.initEditor(FormService, 15)\r\n            FormService.beforeSave = ->\r\n                FormService.model.html = AceService.editor.getValue()\r\n\r\n        $scope.generateUrl = (event) ->\r\n            $http.post '/api/translit/to-url',\r\n                text: FormService.model.keyphrase\r\n            .then (response) ->\r\n                FormService.model.url = response.data\r\n                $scope.checkExistance 'url',\r\n                    target: $(event.target).closest('div').find('input')\r\n\r\n        $scope.checkExistance = (field, event) ->\r\n            Page.checkExistance\r\n                id: FormService.model.id\r\n                field: field\r\n                value: FormService.model[field]\r\n            , (response) ->\r\n                element = $(event.target)\r\n                if response.exists\r\n                    FormService.error_element = element\r\n                    element.addClass('has-error').focus()\r\n                else\r\n                    FormService.error_element = undefined\r\n                    element.removeClass('has-error')\r\n\r\n        $scope.loadTags = (text) ->\r\n            Tag.autocomplete({text: text}).$promise\r\n","angular\r\n    .module 'Egecms'\r\n    .controller 'TagsIndex', ($scope, $attrs, IndexService, Tag) ->\r\n        bindArguments($scope, arguments)\r\n        angular.element(document).ready ->\r\n            IndexService.init(Tag, $scope.current_page, $attrs)\r\n    .controller 'TagsForm', ($scope, $attrs, $timeout, FormService, Tag) ->\r\n        bindArguments($scope, arguments)\r\n        angular.element(document).ready ->\r\n            FormService.init(Tag, $scope.id, $scope.model)\r\n","angular\r\n    .module 'Egecms'\r\n    .controller 'VariablesIndex', ($scope, $attrs, IndexService, Variable) ->\r\n        bindArguments($scope, arguments)\r\n        angular.element(document).ready ->\r\n            IndexService.init(Variable, $scope.current_page, $attrs)\r\n\r\n    .controller 'VariablesForm', ($scope, $attrs, $timeout, FormService, AceService, Variable) ->\r\n        bindArguments($scope, arguments)\r\n        angular.element(document).ready ->\r\n            FormService.init(Variable, $scope.id, $scope.model)\r\n            FormService.dataLoaded.promise.then ->\r\n                AceService.initEditor(FormService, 30)\r\n            FormService.beforeSave = ->\r\n                FormService.model.html = AceService.editor.getValue()\r\n","# angular\r\n#     .module 'Egecms'\r\n#     .controller 'VariablesIndex', ($scope, $attrs, IndexService, Variable) ->\r\n#         bindArguments($scope, arguments)\r\n#         angular.element(document).ready ->\r\n#             IndexService.init(Variable, $scope.current_page, $attrs)\r\n#     .controller 'VariablesForm', ($scope, $attrs, $timeout, FormService, Variable) ->\r\n#         bindArguments($scope, arguments)\r\n#         angular.element(document).ready ->\r\n#             FormService.init(Variable, $scope.id, $scope.model)\r\n","angular.module('Egecms')\r\n    .factory 'Variable', ($resource) ->\r\n        $resource apiPath('variables'), {id: '@id'}, updatable()\r\n    .factory 'Tag', ($resource) ->\r\n        $resource apiPath('tags'), {id: '@id'},\r\n                update:\r\n                    method: 'PUT'\r\n                autocomplete:\r\n                    method: 'GET'\r\n                    url: apiPath('tags', 'autocomplete')\r\n                    isArray: true\r\n                    \r\n    .factory 'Page', ($resource) ->\r\n        $resource apiPath('pages'), {id: '@id'},\r\n            update:\r\n                method: 'PUT'\r\n            checkExistance:\r\n                method: 'POST'\r\n                url: apiPath('pages', 'checkExistance')\r\n\r\napiPath = (entity, additional = '') ->\r\n    \"api/#{entity}/\" + (if additional then additional + '/' else '') + \":id\"\r\n\r\n\r\nupdatable = ->\r\n    update:\r\n        method: 'PUT'\r\ncountable = ->\r\n    count:\r\n        method: 'GET'\r\n","# @todo – разобраться как\r\n# angular.module('Egecms').directive 'bsSelect', ($timeout) ->\r\n#     restrict: 'A'\r\n#     require: 'ngModel'\r\n#     compile: (scope, element, attrs) ->\r\n#         $(element).selectpicker()\r\n","# angular.module('Egerep').directive 'comments', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/comments'\r\n#     scope:\r\n#         user: '='\r\n#         entityId: '='\r\n#         trackLoading: '='\r\n#         entityType: '@'\r\n#     controller: ($rootScope, $scope, $timeout, Comment) ->\r\n#         $scope.show_max = 4                 # сколько комментов показывать в свернутом режиме\r\n#         $scope.show_all_comments = false    # показать все комментарии?\r\n#         $scope.is_dragging = false          # комментарий перетаскивается\r\n#\r\n#         bindDraggable = (comment_id) ->\r\n#             $(\"#comment-#{comment_id}\").draggable\r\n#                 revert: 'invalid'\r\n#                 activeClass: 'drag-active'\r\n#                 start: (e, ui) ->\r\n#                     $scope.is_dragging = true\r\n#                     $scope.$apply()\r\n#                 stop: (e, ui) ->\r\n#                     $scope.is_dragging = false\r\n#                     $scope.$apply()\r\n#\r\n#         $timeout ->\r\n#             $scope.comments.forEach (comment) ->\r\n#                 bindDraggable(comment.id)\r\n#             $(\"#comment-delete-#{$scope.entityType}-#{$scope.entityId}\").droppable\r\n#                 tolerance: 'pointer'\r\n#                 hoverClass: 'hovered'\r\n#                 drop: (e, ui) ->\r\n#                     $scope.remove($(ui.draggable).data('comment-id'))\r\n#         , 2000\r\n#\r\n#         $scope.showAllComments = ->\r\n#             $scope.show_all_comments = true\r\n#             $timeout ->\r\n#                 $scope.comments.forEach (comment) ->\r\n#                     bindDraggable(comment.id)\r\n#\r\n#         $scope.getComments = ->\r\n#             if ($scope.show_all_comments or $scope.comments.length <= $scope.show_max) then $scope.comments else _.last($scope.comments, $scope.show_max - 1)\r\n#\r\n#         # перезагружаем комменты, если меняется entity_id\r\n#         $scope.$watch 'entityId', (newVal, oldVal) ->\r\n#             $scope.comments = Comment.query\r\n#                 entity_type: $scope.entityType\r\n#                 entity_id: newVal\r\n#             , ->\r\n#                 $rootScope.loaded_comments++ if $scope.trackLoading\r\n#\r\n#         $scope.formatDateTime = (date) ->\r\n#             moment(date).format \"DD.MM.YY в HH:mm\"\r\n#\r\n#         $scope.startCommenting = (event) ->\r\n#             $scope.start_commenting = true\r\n#             $timeout ->\r\n#                 $(event.target).parent().find('input').focus()\r\n#\r\n#         $scope.endCommenting = ->\r\n#             $scope.comment = ''\r\n#             $scope.start_commenting = false\r\n#\r\n#         $scope.remove = (comment_id) ->\r\n#             _.find($scope.comments, {id: comment_id}).$remove()\r\n#             $scope.comments = _.without($scope.comments, _.findWhere($scope.comments, {id: comment_id}))\r\n#\r\n#         $scope.edit = (comment, event) ->\r\n#             old_text    = comment.comment\r\n#             element     = $(event.target)\r\n#\r\n#             element.unbind('keydown').unbind('blur')\r\n#\r\n#             element.attr('contenteditable', 'true').focus()\r\n#                 .on 'keydown', (e) ->\r\n#                     console.log old_text\r\n#                     if e.keyCode is 13\r\n#                         $(@).removeAttr('contenteditable').blur()\r\n#                         comment.comment = $(@).text()\r\n#                         comment.$update()\r\n#                     if e.keyCode is 27\r\n#                         $(@).blur()\r\n#\r\n#                 .on 'blur', (e) ->\r\n#                     if element.attr 'contenteditable'\r\n#                         console.log old_text\r\n#                         element.removeAttr('contenteditable').html old_text\r\n#             return\r\n#             # setEndOfContenteditable(event.target)\r\n#\r\n#         $scope.submitComment = (event) ->\r\n#             if event.keyCode is 13\r\n#                 new_comment = new Comment\r\n#                     comment: $scope.comment\r\n#                     user_id: $scope.user.id\r\n#                     entity_id: $scope.entityId\r\n#                     entity_type: $scope.entityType\r\n#                 new_comment.$save()\r\n#                     .then (response)->\r\n#                         console.log response\r\n#                         new_comment.user = $scope.user\r\n#                         new_comment.id = response.id\r\n#                         $scope.comments.push new_comment\r\n#                         $timeout ->\r\n#                             bindDraggable(new_comment.id)\r\n#                 $scope.endCommenting()\r\n#\r\n#             if event.keyCode is 27\r\n#                 $(event.target).blur()\r\n","# angular.module('Egerep').directive 'email', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/email'\r\n#     scope:\r\n#         entity: '='\r\n#     controller: ($scope) ->\r\n#         $scope.send = ->\r\n#             $('#email-modal').modal 'show'\r\n#     # controller: ($scope, $timeout, Email) ->\r\n#     #     # массовая отправка?\r\n#     #     $scope.mass = false\r\n#     #\r\n#     #     # подсчитать СМС\r\n#     #     $scope.smsCount = ->\r\n#     #         SmsCounter.count($scope.message || '').messages\r\n#     #\r\n#     #     # отправить\r\n#     #     $scope.send = ->\r\n#     #         if $scope.message\r\n#     #             sms = new Sms\r\n#     #                 message: $scope.message\r\n#     #                 to: $scope.number\r\n#     #                 mass: $scope.mass\r\n#     #             sms.$save()\r\n#     #\r\n#     #     # подгружаем историю, если номер телефона меняется\r\n#     #     $scope.$watch 'number', (newVal, oldVal) ->\r\n#     #         console.log $scope.$parent.formatDateTime($scope.created_at)\r\n#     #         $scope.history = Sms.query({number: newVal}) if newVal\r\n","# angular.module('Egerep').directive 'inputComment', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/input-comment'\r\n#     scope:\r\n#         entity: '='\r\n#         commentField: '@'\r\n#     controller: ($scope, $timeout) ->\r\n#         $scope.is_being_commented = false\r\n#\r\n#         $scope.blurComment = ->\r\n#             $scope.is_being_commented = false\r\n#\r\n#         $scope.focusComment = ->\r\n#             $scope.is_being_commented = true\r\n#\r\n#         $scope.startComment = (event) ->\r\n#             $scope.is_being_commented = true\r\n#             $timeout ->\r\n#                 $(event.target).parent().children('input').focus()\r\n#\r\n#         $scope.endComment =  (event) ->\r\n#             if event.keyCode is 13\r\n#                 $(event.target).blur()\r\n#                 return\r\n","# angular.module('Egerep').directive 'metroList', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/metro-list'\r\n#     scope:\r\n#         markers: '='\r\n#     controller: ($scope, $element, $attrs) ->\r\n#         $scope.inline = $attrs.hasOwnProperty('inline')\r\n#         $scope.one_station = $attrs.hasOwnProperty('oneStation')\r\n#\r\n#         $scope.short = (title) ->\r\n#             title.slice(0,3).toUpperCase()\r\n#\r\n#         $scope.minutes = (minutes) ->\r\n#             Math.round minutes\r\n","angular.module 'Egecms'\r\n    .directive 'ngMulti', ->\r\n        restrict: 'E'\r\n        replace: true\r\n        scope:\r\n            object: '='\r\n            model: '='\r\n            label: '@'\r\n            noneText: '@'\r\n        templateUrl: 'directives/ngmulti'\r\n        controller: ($scope, $element, $attrs, $timeout) ->\r\n            $timeout ->\r\n                $($element).selectpicker\r\n                    noneSelectedText: $scope.noneText\r\n            , 100\r\n","# angular.module('Egerep').directive 'pencilInput', ->\r\n#     restrict: 'E'\r\n#     replace: true\r\n#     templateUrl: 'directives/pencil-input'\r\n#     scope:\r\n#         model: '='\r\n#     controller: ($scope, $timeout, $element, $controller) ->\r\n#         $scope.is_being_commented = false\r\n#\r\n#         $scope.blurComment = ->\r\n#             $scope.is_being_commented = false\r\n#\r\n#         $scope.focusComment = ->\r\n#             $scope.is_being_commented = true\r\n#\r\n#         $scope.startComment = (event) ->\r\n#             $scope.is_being_commented = true\r\n#             $timeout ->\r\n#                 $(event.target).parent().children('div').focus()\r\n#\r\n#         $scope.watchEnter = (event) ->\r\n#             if event.keyCode in [13, 27]\r\n#                 # @todo: надо изменить\r\n#                 if event.keyCode is 13\r\n#                     $scope.model = $(event.target).parent().children('div').text()\r\n#\r\n#                 $(event.target).parent().children('div').text($scope.model)\r\n#                 event.preventDefault()\r\n#                 $(event.target).blur()\r\n#             return\r\n","# angular.module('Egerep').directive 'phones', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/phones'\r\n#     scope:\r\n#         entity: '='\r\n#     controller: ($scope, $timeout, $rootScope, PhoneService, UserService) ->\r\n#         $scope.PhoneService = PhoneService\r\n#         $scope.UserService  = UserService\r\n#\r\n#         console.log $scope.entityType\r\n#\r\n#         # level depth\r\n#         $rootScope.dataLoaded.promise.then (data) ->\r\n#             $scope.level = if $scope.entity.phones and $scope.entity.phones.length then $scope.entity.phones.length else 1\r\n#\r\n#         $scope.nextLevel = ->\r\n#             $scope.level++\r\n#\r\n#         $scope.phoneMaskControl = (event) ->\r\n#             el = $(event.target)\r\n#             # grabs string phone_2 from object model.phone2\r\n#             # so it can be accessible by key\r\n#             phone_id = el.attr('ng-model').split('.')[1]\r\n#             $scope.entity[phone_id] = $(event.target).val()\r\n#\r\n#         $scope.isFull = (number) ->\r\n#             return false if number is undefined or number is \"\"\r\n#             !number.match(/_/)\r\n#\r\n#         # отправить смс\r\n#         $scope.sms = (number) ->\r\n#             $('#sms-modal').modal 'show'\r\n#             $rootScope.sms_number = number\r\n#\r\n#         # информация по api\r\n#         $scope.info = (number) ->\r\n#             $scope.api_number = number\r\n#             $scope.mango_info = null\r\n#             $('#api-phone-info').modal 'show'\r\n#             PhoneService.info(number).then (response) ->\r\n#                 console.log response.data\r\n#                 $scope.mango_info = response.data\r\n#\r\n#         $scope.formatDateTime = (date) ->\r\n#             moment(date).format \"DD.MM.YY в HH:mm\"\r\n#\r\n#         $scope.time = (seconds) ->\r\n#             moment({}).seconds(seconds).format(\"mm:ss\")\r\n#\r\n#         $scope.getNumberTitle = (number) ->\r\n#             console.log number, $scope.api_number\r\n#             return 'текущий номер' if number is PhoneService.clean($scope.api_number)\r\n#             number\r\n#\r\n#         recodringLink = (recording_id) ->\r\n#             api_key   = 'goea67jyo7i63nf4xdtjn59npnfcee5l'\r\n#             api_salt  = 't9mp7vdltmhn0nhnq0x4vwha9ncdr8pa'\r\n#             timestamp = moment().add(5, 'minute').unix()\r\n#\r\n#             sha256 = new jsSHA('SHA-256', 'TEXT')\r\n#             sha256.update(api_key + timestamp + recording_id + api_salt)\r\n#             sign = sha256.getHash('HEX')\r\n#\r\n#             return \"https://app.mango-office.ru/vpbx/queries/recording/link/#{recording_id}/play/#{api_key}/#{timestamp}/#{sign}\"\r\n#\r\n#         $scope.play = (recording_id) ->\r\n#             $scope.audio.pause() if $scope.audio\r\n#             $scope.audio = new Audio recodringLink(recording_id)\r\n#             $scope.audio.play()\r\n#             $scope.is_playing = recording_id\r\n#\r\n#         $scope.isPlaying = (recording_id) ->\r\n#             $scope.is_playing is recording_id\r\n#\r\n#         $scope.stop = (recording_id) ->\r\n#             $scope.is_playing = null\r\n#             $scope.audio.pause()\r\n#\r\n#         $scope.disconnectReason = (data) ->\r\n#             # return 'НБТ' if data.to_extension is '' and data.disconnect_reason is '1100'\r\n#             data.disconnect_reason\r\n","angular.module 'Egecms'\r\n    .directive 'plural', ->\r\n        restrict: 'E'\r\n        scope:\r\n            count: '='      # кол-во\r\n            type: '@'       # тип plural age | student | ...\r\n            noneText: '@'   # текст, если кол-во равно нулю\r\n        templateUrl: 'directives/plural'\r\n        controller: ($scope, $element, $attrs, $timeout) ->\r\n            $scope.textOnly = $attrs.hasOwnProperty('textOnly')\r\n            $scope.hideZero = $attrs.hasOwnProperty('hideZero')\r\n\r\n            $scope.when =\r\n                'age': ['год', 'года', 'лет']\r\n                'student': ['ученик', 'ученика', 'учеников']\r\n                'minute': ['минуту', 'минуты', 'минут']\r\n                'hour': ['час', 'часа', 'часов']\r\n                'day': ['день', 'дня', 'дней']\r\n                'meeting': ['встреча', 'встречи', 'встреч']\r\n                'score': ['балл', 'балла', 'баллов']\r\n                'rubbles': ['рубль', 'рубля', 'рублей']\r\n                'lesson': ['занятие', 'занятия', 'занятий']\r\n                'client': ['клиент', 'клиента', 'клиентов']\r\n                'mark': ['оценки', 'оценок', 'оценок']\r\n                'request': ['заявка', 'заявки', 'заявок']\r\n","# angular.module 'Egerep'\r\n#     .directive 'plus', ->\r\n#         restrict: 'E'\r\n#         scope:\r\n#             previous: '='\r\n#             count: '='\r\n#         templateUrl: 'directives/plus'\r\n","angular.module 'Egecms'\r\n    .directive 'ngSelectNew', ->\r\n        restrict: 'E'\r\n        replace: true\r\n        scope:\r\n            object: '='\r\n            model: '='\r\n            noneText: '@'\r\n            label: '@'\r\n        templateUrl: 'directives/select-new'\r\n        controller: ($scope, $element, $attrs, $timeout) ->\r\n            # выбираем первое значение по умолчанию, если нет noneText\r\n            if not $scope.noneText\r\n                $scope.model = _.first Object.keys($scope.object)\r\n\r\n            $timeout ->\r\n                $($element).selectpicker()\r\n            , 500\r\n","angular.module 'Egecms'\r\n    .directive 'ngSelect', ->\r\n        restrict: 'E'\r\n        replace: true\r\n        scope:\r\n            object: '='\r\n            model: '='\r\n            noneText: '@'\r\n            label: '@'\r\n        templateUrl: 'directives/ngselect'\r\n        controller: ($scope, $element, $attrs, $timeout) ->\r\n            # выбираем первое значение по умолчанию, если нет noneText\r\n            if not $scope.noneText\r\n                $scope.model = _.first Object.keys($scope.object)\r\n\r\n            $timeout ->\r\n                $($element).selectpicker()\r\n            , 150\r\n","# angular.module('Egerep').directive 'sms', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/sms'\r\n#     scope:\r\n#         number: '='\r\n#     controller: ($scope, $timeout, Sms) ->\r\n#         # массовая отправка?\r\n#         $scope.mass = false\r\n#\r\n#         # подсчитать СМС\r\n#         $scope.smsCount = ->\r\n#             SmsCounter.count($scope.message || '').messages\r\n#\r\n#         # отправить\r\n#         $scope.send = ->\r\n#             if $scope.message\r\n#                 sms = new Sms\r\n#                     message: $scope.message\r\n#                     to: $scope.number\r\n#                     mass: $scope.mass\r\n#                 sms.$save()\r\n#                     .then (data) ->\r\n#                         $scope.history.push(data)\r\n#                         scrollDown()\r\n#\r\n#         # подгружаем историю, если номер телефона меняется\r\n#         $scope.$watch 'number', (newVal, oldVal) ->\r\n#             console.log $scope.$parent.formatDateTime($scope.created_at)\r\n#             $scope.history = Sms.query({number: newVal}) if newVal\r\n#             scrollDown()\r\n#\r\n#         scrollDown = ->\r\n#             $timeout ->\r\n#                 $(\"#sms-history\").animate({ scrollTop: $(window).height() }, \"fast\");\r\n","# angular.module 'Egerep'\r\n#     .directive 'tutorPhoto', ->\r\n#         restrict: 'E'\r\n#         replace: true\r\n#         scope:\r\n#             tutor: '='\r\n#             version: '='\r\n#         templateUrl: 'directives/tutor-photo'\r\n","# #\r\n# # Dependencies: UserService should be available in parent scope!\r\n# #\r\n#\r\n# angular.module 'Egerep'\r\n#     .directive 'userSwitch', ->\r\n#         restrict: 'E'\r\n#         scope:\r\n#             entity: '='\r\n#             resource: '='\r\n#             userId: '@'\r\n#         templateUrl: 'directives/user-switch'\r\n#         controller: ($scope) ->\r\n#             $scope.UserService = $scope.$parent.UserService\r\n","# angular.module 'Egerep'\r\n#     .directive 'user', ->\r\n#         restrict: 'E'\r\n#         scope:\r\n#             model: '='      # кол-во\r\n#         templateUrl: 'directives/user'\r\n","angular.module('Egecms')\r\n    .value 'Published', ['не опубликовано', 'опубликовано']\r\n    .value 'UpDown', [\r\n        {id: 1, title: 'вверху'},\r\n        {id: 2, title: 'внизу'},\r\n    ]\r\n","angular.module 'Egecms'\r\n    .service 'AceService', ->\r\n        this.initEditor = (FormService, minLines = 30) ->\r\n            this.editor = ace.edit(\"editor\")\r\n            this.editor.getSession().setMode(\"ace/mode/html\")\r\n            this.editor.getSession().setUseWrapMode(true)\r\n            this.editor.setOptions\r\n                minLines: minLines\r\n                maxLines: Infinity\r\n            this.editor.commands.addCommand\r\n                name: 'save',\r\n                bindKey:\r\n                    win: 'Ctrl-S'\r\n                    mac: 'Command-S'\r\n                exec: (editor) ->\r\n                    FormService.edit()\r\n        this\r\n","angular.module 'Egecms'\r\n    .service 'IndexService', ($rootScope) ->\r\n        this.max_size = 30\r\n\r\n        this.init = (Resource, current_page, attrs) ->\r\n            $rootScope.frontend_loading = true\r\n            this.Resource = Resource\r\n            this.current_page = parseInt(current_page)\r\n            this.controller = attrs.ngController.toLowerCase().slice(0, -5)\r\n            this.loadPage()\r\n\r\n        this.loadPage = ->\r\n            this.Resource.get\r\n                page: this.current_page\r\n            , (response) =>\r\n                this.page = response\r\n                $rootScope.frontend_loading = false\r\n\r\n        this.pageChanged = ->\r\n            $rootScope.frontend_loading = true\r\n            this.loadPage()\r\n            this.changeUrl()\r\n\r\n        # change browser user / history push\r\n        this.changeUrl = ->\r\n            window.history.pushState('', '', this.controller + '?page=' + this.current_page)\r\n\r\n        this\r\n    .service 'FormService', ($rootScope, $q, $timeout) ->\r\n        this.init = (Resource, id, model) ->\r\n            this.dataLoaded = $q.defer()\r\n            $rootScope.frontend_loading = true\r\n            this.Resource = Resource\r\n            this.saving = false\r\n            if id\r\n                this.model = Resource.get({id: id}, => modelLoaded())\r\n            else\r\n                this.model = new Resource(model)\r\n                modelLoaded()\r\n\r\n\r\n        modelLoaded = =>\r\n            $rootScope.frontend_loading = false\r\n            $timeout =>\r\n                this.dataLoaded.resolve(true)\r\n\r\n        beforeSave = =>\r\n            if this.error_element is undefined\r\n                ajaxStart()\r\n                this.beforeSave() if this.beforeSave isnt undefined\r\n                this.saving = true\r\n                true\r\n            else\r\n                $(this.error_element).focus()\r\n                # если нет ошибок, вернуть true и обработать в save/create\r\n                false\r\n\r\n        # вырезаем MODEL из url типа /website/model/create\r\n        modelName = ->\r\n            l = window.location.pathname.split('/')\r\n            model_name = l[l.length - 2]\r\n            model_name = l[l.length - 3] if $.isNumeric(model_name)\r\n            model_name\r\n\r\n        this.delete = (event) ->\r\n            bootbox.confirm \"Вы уверены, что хотите #{$(event.target).text()} ##{this.model.id}?\", (result) =>\r\n                if result is true\r\n                    beforeSave()\r\n                    this.model.$delete().then ->\r\n                        redirect modelName()\r\n\r\n        this.edit = ->\r\n            return if not beforeSave()\r\n            this.model.$update().then =>\r\n                this.saving = false\r\n                ajaxEnd()\r\n\r\n        this.create = ->\r\n            return if not beforeSave()\r\n            this.model.$save().then (response) =>\r\n                redirect modelName() + \"/#{response.id}/edit\"\r\n\r\n        this\r\n"]}